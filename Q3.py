# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ipTPAA18z-do65NKUBIoShGMDwYh2qOb
"""

#importing necessary libraries
import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.optimizers import Adam, SGD
import matplotlib.pyplot as plt

# Load the MNIST dataset
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

# Define the model architecture
def create_model():
    model = Sequential([
        Flatten(input_shape=(28, 28)),
        Dense(128, activation='relu'),
        Dense(10, activation='softmax')
    ])
    return model

# Train and evaluate the model with Adam optimizer
model_adam = create_model()
model_adam.compile(optimizer=Adam(), loss='sparse_categorical_crossentropy', metrics=['accuracy'])
history_adam = model_adam.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10, batch_size=32)

# Train and evaluate the model with SGD optimizer
model_sgd = create_model()
model_sgd.compile(optimizer=SGD(), loss='sparse_categorical_crossentropy', metrics=['accuracy'])
history_sgd = model_sgd.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10, batch_size=32)

# Plot accuracy trends
plt.figure(figsize=(12, 6))
plt.plot(history_adam.history['accuracy'], label='Adam - Training Accuracy')
plt.plot(history_adam.history['val_accuracy'], label='Adam - Validation Accuracy')
plt.plot(history_sgd.history['accuracy'], label='SGD - Training Accuracy')
plt.plot(history_sgd.history['val_accuracy'], label='SGD - Validation Accuracy')
plt.title('Training and Validation Accuracy Comparison')
plt.xlabel('Epochs')
plt.ylabel('Accuracy')
plt.legend()
plt.show()

