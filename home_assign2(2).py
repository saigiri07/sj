# -*- coding: utf-8 -*-
"""Home_Assign2(2).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Xsy4UkPPHPv2C24vzbHmg3Jc446Ai3gp
"""

import numpy as np
import tensorflow as tf
from tensorflow.keras.layers import Conv2D

# Define the input matrix and kernel
input_matrix = np.array([[1, 2, 3, 4, 5],
                         [6, 7, 8, 9, 10],
                         [11, 12, 13, 14, 15],
                         [16, 17, 18, 19, 20],
                         [21, 22, 23, 24, 25]], dtype=np.float32)

kernel = np.array([[0, 1, 0],
                   [1, -4, 1],
                   [0, 1, 0]], dtype=np.float32)

# Reshape input and kernel for TensorFlow/Keras
input_matrix = input_matrix.reshape((1, 5, 5, 1))
kernel = kernel.reshape((3, 3, 1, 1))

# Function to perform convolution and print output
def perform_convolution(input_data, kernel_data, strides, padding):
    conv_layer = Conv2D(filters=1, kernel_size=(3, 3), strides=strides, padding=padding,
                        kernel_initializer=tf.constant_initializer(kernel_data))
    output = conv_layer(input_data)
    print(f"Stride = {strides}, Padding = '{padding}'")
    print(output.numpy().reshape(output.shape[1], output.shape[2]))
    print("-" * 20)

# Perform convolution with different parameters
perform_convolution(input_matrix, kernel, strides=1, padding='VALID')
perform_convolution(input_matrix, kernel, strides=1, padding='SAME')
perform_convolution(input_matrix, kernel, strides=2, padding='VALID')
perform_convolution(input_matrix, kernel, strides=2, padding='SAME')

